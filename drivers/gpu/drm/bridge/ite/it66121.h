// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (C) 2018 Heiko Stuebner <heiko@sntech.de>
 *
 * based on beagleboard it66121 i2c encoder driver
 * Copyright (C) 2017 Baozhu Zuo <zuobaozhu@gmail.com>
 */
#ifndef _DRM_ITE_IT66121_H_
#define _DRM_ITE_IT66121_H_

#include <linux/hdmi.h>
#include <linux/i2c.h>
#include <linux/regmap.h>
#include <linux/regulator/consumer.h>

#include <drm/drm_crtc_helper.h>

struct it66121 {
	struct i2c_client *i2c;
	struct i2c_client *i2c_cec;
	u32 cec_addr;
	struct regmap *regmap;
	struct regmap *regmap_cec;
	int cur_bank;
	struct mutex bank_mutex;

	struct gpio_desc *reset_gpio;
	struct regulator_bulk_data *supplies;
	unsigned int num_supplies;
	struct work_struct hpd_work;

	struct drm_bridge bridge;
	struct drm_connector connector;

	bool sink_is_hdmi;
	bool sink_has_audio;
	bool need_csc;

	int powerstatus;
	int plug_status;
	u8 AudioChannelEnable;
	struct platform_device *audio_pdev;

	struct cec_adapter *cec_adap;
	bool cec_enabled_adap;
};

#define IT66121_VENDOR_ID0			0x00
#define IT66121_VENDOR_ID1			0x01
#define IT66121_DEVICE_ID0			0x02
#define IT66121_DEVICE_ID1			0x03
#define IT66121_DEVICE_ID1_DEVID_SHIFT		0
#define IT66121_DEVICE_ID1_DEVID_MASK		0xf
#define IT66121_DEVICE_ID1_REVID_SHIFT		4
#define IT66121_DEVICE_ID1_REVID_MASK		0xf

#define IT66121_SW_RST				0x04
#define IT66121_SW_RST_ENTEST			BIT(7)
#define IT66121_SW_RST_REF			BIT(5)
#define IT66121_SW_RST_SOFT_AUD			BIT(4)
#define IT66121_SW_RST_SOFT_VID			BIT(3)
#define IT66121_SW_RST_AUDIO_FIFO		BIT(2)
#define IT66121_SW_RST_HDMI			BIT(1)
#define IT66121_SW_RST_HDCP			BIT(0)

#define IT66121_INT_CTRL			0x05
#define IT66121_INT_CTRL_POL_ACT_HIGH		BIT(7)
#define IT66121_INT_CTRL_PUSHPULL		0
#define IT66121_INT_CTRL_OPENDRAIN		BIT(6)
#define IT66121_INT_CTRL_EN_INT			BIT(5)
#define IT66121_INT_CTRL_REFCLK_DIV_SHIFT	2
#define IT66121_INT_CTRL_REFCLK_DIV_MASK	0x3
enum {
	IT66121_INT_CTRL_REFCLK_DIV2 = 0,
	IT66121_INT_CTRL_REFCLK_DIV4,
	IT66121_INT_CTRL_REFCLK_DIV8,
};
#define IT66121_INT_CTRL_REFCLK_REDUCE		BIT(1)
#define IT66121_INT_CTRL_TXCLK_POWERDN		BIT(0)

#define IT66121_INT_STAT0			0x06
#define IT66121_INT_STAT0_AUDIO_OVERFLOW	BIT(7)
//#define IT66121_INT_STAT0_ROMACQ_NOACK		BIT(6)
#define IT66121_INT_STAT0_DDC_NOACK		BIT(5)
#define IT66121_INT_STAT0_DDC_FIFO_ERR		BIT(4)
//#define IT66121_INT_STAT0_ROMACQ_BUS_HANG	BIT(3)
#define IT66121_INT_STAT0_DDC_BUS_HANG		BIT(2)
#define IT66121_INT_STAT0_RX_SENSE		BIT(1)
#define IT66121_INT_STAT0_HPD			BIT(0)

#define IT66121_INT_STAT1			0x07
//#define IT66121_INT_STAT1_HDCP_SYNC_DET_FAIL	BIT(7) //PKT_3D_STATUS?
#define IT66121_INT_STAT1_VID_UNSTABLE		BIT(6)
#define IT66121_INT_STAT1_PKT_ACP		BIT(5)
#define IT66121_INT_STAT1_PKT_NULL		BIT(4)
#define IT66121_INT_STAT1_PKT_GEN		BIT(3)
#define IT66121_INT_STAT1_KSVLIST_CHK		BIT(2)
#define IT66121_INT_STAT1_AUTH_DONE		BIT(1)
#define IT66121_INT_STAT1_AUTH_FAIL		BIT(0)

#define IT66121_INT_STAT2			0x08
#define IT66121_INT_STAT2_AUD_CTS		BIT(6)
#define IT66121_INT_STAT2_VSYNC			BIT(5)
#define IT66121_INT_STAT2_VID_STABLE		BIT(4)
#define IT66121_INT_STAT2_PKT_MPG		BIT(3)
//#define IT66121_INT_STAT2_PKT_SPD		BIT(2)
#define IT66121_INT_STAT2_PKT_AUD		BIT(1)
#define IT66121_INT_STAT2_PKT_AVI		BIT(0)

#define IT66121_INT_MASK0			0x09
#define IT66121_INT_MASK0_AUDIO_OVERFLOW	BIT(7)
#define IT66121_INT_MASK0_DDC_NOACK		BIT(5)
#define IT66121_INT_MASK0_DDC_FIFO_ERR		BIT(4)
#define IT66121_INT_MASK0_DDC_BUS_HANG		BIT(2)
#define IT66121_INT_MASK0_RX_SENSE		BIT(1)
#define IT66121_INT_MASK0_HPD			BIT(0)

#define IT66121_INT_MASK1			0x0a
#define IT66121_INT_MASK1_PKT_AVI		BIT(7)
#define IT66121_INT_MASK1_VID_UNSTABLE		BIT(6)
#define IT66121_INT_MASK1_PKT_ACP		BIT(5)
#define IT66121_INT_MASK1_PKT_NULL		BIT(4)
#define IT66121_INT_MASK1_PKT_GEN		BIT(3)
#define IT66121_INT_MASK1_KSVLIST_CHK		BIT(2)
#define IT66121_INT_MASK1_AUTH_DONE		BIT(1)
#define IT66121_INT_MASK1_AUTH_FAIL		BIT(0)

#define IT66121_INT_MASK2			0x0b
// #define IT66121_INT_MASK2_HDCP_SYNC_DET_FAIL	BIT(6) PKT_3D_MASK?
#define IT66121_INT_MASK2_AUD_CTS		BIT(5)
#define IT66121_INT_MASK2_VSYNC			BIT(4)
#define IT66121_INT_MASK2_VID_STABLE		BIT(3)
#define IT66121_INT_MASK2_PKT_MPG		BIT(2)
//#define IT66121_INT_MASK2_PKT_SPD		BIT(1)
#define IT66121_INT_MASK2_PKT_AUD		BIT(0)

#define IT66121_INT_CLR0			0x0c
#define IT66121_INT_CLR0_PKT_ACP		BIT(7)
#define IT66121_INT_CLR0_PKT_NULL		BIT(6)
#define IT66121_INT_CLR0_PKT_GEN		BIT(5)
#define IT66121_INT_CLR0_KSVLIST_CHK		BIT(4)
#define IT66121_INT_CLR0_AUTH_DONE		BIT(3)
#define IT66121_INT_CLR0_AUTH_FAIL		BIT(2)
#define IT66121_INT_CLR0_RX_SENSE		BIT(1)
#define IT66121_INT_CLR0_HPD			BIT(0)

#define IT66121_INT_CLR1			0x0d
#define IT66121_INT_CLR1_VSYNC			BIT(7)
#define IT66121_INT_CLR1_VID_STABLE		BIT(6)
#define IT66121_INT_CLR1_PKT_MPG		BIT(5)
// #define IT66121_INT_CLR1_PKT_SPD		BIT(4)
#define IT66121_INT_CLR1_PKT_AUD		BIT(3)
#define IT66121_INT_CLR1_PKT_AVI		BIT(2)
#define IT66121_INT_CLR1_HDCP_SYNC_DET_FAIL	BIT(1)
#define IT66121_INT_CLR1_VID_UNSTABLE		BIT(0)

#define IT66121_SYS_STATUS0			0x0e
#define IT66121_SYS_STATUS0_INT_ACTIVE		BIT(7)
#define IT66121_SYS_STATUS0_HP_DETECT		BIT(6)
#define IT66121_SYS_STATUS0_RX_SENSE_DETECT	BIT(5)
#define IT66121_SYS_STATUS0_TX_VID_STABLE	BIT(4)
#define IT66121_SYS_STATUS0_CTSINTSTEP_SHIFT	2
#define IT66121_SYS_STATUS0_CTSINTSTEP_MASK	0x3
#define IT66121_SYS_STATUS0_CLEAR_AUD_CTS	BIT(1)
#define IT66121_SYS_STATUS0_INTACTDONE		BIT(0)

#define IT66121_SYS_STATUS1			0x0f
#define IT66121_SYS_STATUS1_GATE_RCLK		BIT(6)
#define IT66121_SYS_STATUS1_GATE_IACLK		BIT(5)
#define IT66121_SYS_STATUS1_GATE_TXCLK		BIT(4)
#define IT66121_SYS_STATUS1_GATE_CRCLK		BIT(3)
#define IT66121_SYS_STATUS1_BANK_MASK		0x3
#define IT66121_SYS_STATUS1_BANK_SHIFT		0

/*
 * The registers are separated into three register banks:
 * Reg_000 - Reg_02F are accessible in any register bank.
 * Reg_030 - Reg_0FF are accessible in register bank0
 * Reg_130 - Reg_1BF are accessible in register bank1.
 *                   These are HDMI packet registers.
 */
enum {
	IT66121_SYS_STATUS1_BANK0 = 0,
	IT66121_SYS_STATUS1_BANK1,
};

#define IT66121_DDC_MASTER			0x10
#define IT66121_DDC_MASTER_ROM			BIT(1)
#define IT66121_DDC_MASTER_DDC			0
#define IT66121_DDC_MASTER_HOST			BIT(0)
#define IT66121_DDC_MASTER_HDCP			(0)

#define IT66121_DDC_HEADER			0x11
enum {
	IT66121_DDC_HEADER_HDCP = 0x74,
	IT66121_DDC_HEADER_EDID = 0xa0,
	IT66121_DDC_HEADER_EEPROM = 0xa2,
};

#define IT66121_DDC_REQOFFSET			0x12
#define IT66121_DDC_REQCOUNT			0x13
#define IT66121_DDC_SEGMENT			0x14

#define IT66121_DDC_CMD				0x15
enum {
	IT66121_DDC_CMD_DDC_SEQ_BURST_READ = 0x0,
	IT66121_DDC_CMD_LINK_CHK_READ = 0x2,
	IT66121_DDC_CMD_EDID_READ = 0x3,
	IT66121_DDC_CMD_AKSV_WRITE = 0x4,
	IT66121_DDC_CMD_AINFO_WRITE = 0x5,
	IT66121_DDC_CMD_AN_WRITE = 0x6,
	IT66121_DDC_CMD_FIFO_CLEAR = 0x9,
	IT66121_DDC_CMD_GEN_SCLCLK = 0xa,
	IT66121_DDC_CMD_DDC_ABORT = 0xf,
};

#define IT66121_DDC_STATUS			0x16
#define IT66121_DDC_STATUS_DONE			BIT(7)
#define IT66121_DDC_STATUS_ACT			BIT(6)
#define IT66121_DDC_STATUS_NOACK		BIT(5)
#define IT66121_DDC_STATUS_WAIT_BUS		BIT(4)
#define IT66121_DDC_STATUS_ARBILOSE		BIT(3)
#define IT66121_DDC_STATUS_ERROR		(IT66121_DDC_STATUS_NOACK | \
						 IT66121_DDC_STATUS_WAIT_BUS | \
						 IT66121_DDC_STATUS_ARBILOSE)
#define IT66121_DDC_STATUS_FIFO_FULL		BIT(2)
#define IT66121_DDC_STATUS_FIFO_EMPTY		BIT(1)
#define IT66121_DDC_STATUS_VRVALID		BIT(0)

#define IT66121_DDC_READ_FIFO			0x17

#define IT66121_ROM_STARTADDR			0x18
#define IT66121_HDCP_HEADER			0x19
#define IT66121_ROM_HEADER			0x1a
#define IT66121_DDC_BUS_HOLD_TIME		0x1b
/*#define IT66121_ROM_STATUS			0x1c
    #define B_TX_ROM_DONE  (1<<7)
    #define B_TX_ROM_ACTIVE	(1<<6)
    #define B_TX_ROM_NOACK	(1<<5)
    #define B_TX_ROM_WAITBUS	(1<<4)
    #define B_TX_ROM_ARBILOSE	(1<<3)
    #define B_TX_ROM_BUSHANG	(1<<2)
*/
// HDCP

#define IT66121_HDCP_AN_GENERATE		0x1f
    #define B_TX_START_CIPHER_GEN  1
    #define B_TX_STOP_CIPHER_GEN   0


#define IT66121_HDCP				0x20
#define IT66121_HDCP_ENABLE_SYNCDETECT		BIT(2)
#define IT66121_HDCP_ENABLE_HDCP11		BIT(1)
#define IT66121_HDCP_DESIRED			BIT(0)


#define IT66121_HDCP_AUTH			0x21
#define IT66121_HDCP_AUTH_FIRE			BIT(0)

#define IT66121_LISTCTRL			0x22
#define IT66121_LISTCTRL_LISTFAIL		BIT(1)
#define IT66121_LISTCTRL_LISTDONE		BIT(0)

#define IT66121_AKSV0				0x23
#define IT66121_AKSV1				0x24
#define IT66121_AKSV2				0x25
#define IT66121_AKSV3				0x26
#define IT66121_AKSV4				0x27

#define REG_TX_AN0  0x28
#define REG_TX_AN_GEN0  0x30


#define IT66121_ARI0				0x38
#define IT66121_ARI1				0x39
#define IT66121_APJ				0x3a
#define IT66121_BKSV0				0x3b
#define IT66121_BKSV1				0x3c
#define IT66121_BKSV2				0x3d
#define IT66121_BKSV3				0x3e
#define IT66121_BKSV4				0x3f
#define IT66121_BRI0				0x40
#define IT66121_BRI1				0x41
#define IT66121_BPJ				0x42

#define IT66121_BCAP				0x43
#define IT66121_BCAP_HDCP_REPEATER		BIT(6)
#define IT66121_BCAP_KSV_FIFO_RDY		BIT(5)
#define IT66121_BCAP_FAST_400KHZ		BIT(4)
#define IT66121_BCAP_HDCP11			BIT(1)
#define IT66121_BCAP_FAST_REAUTH		BIT(0)

#define IT66121_BSTATUS0			0x44
#define IT66121_BSTATUS0_MAX_DEVS_EXCEEDED	BIT(7)
#define IT66121_BSTATUS0_DEVICE_COUNT_MASK	0x7f
#define IT66121_BSTATUS1			0x45
#define IT66121_BSTATUS1_HDMI_MODE		BIT(4)
#define IT66121_BSTATUS1_MAX_CASCADE_EXCEEDED	BIT(3)
#define It66121_BSTATUS1_CASCADE_DEPTH_MASK	0x7

#define IT66121_AUTH_STATUS			0x46
#define IT66121_AUTH_STATUS_DONE		BIT(7)
#define IT66121_AUTH_STATUS_DDC_HANG		BIT(6)
#define IT66121_AUTH_STATUS_SYNC_FAIL		BIT(5)
#define IT66121_AUTH_STATUS_PJ_FAIL		BIT(4)
#define IT66121_AUTH_STATUS_RI_FAIL		BIT(3)
#define IT66121_AUTH_STATUS_R0_FAIL		BIT(2)
#define IT66121_AUTH_STATUS_BKSV_INVALID	BIT(1)
#define IT66121_AUTH_STATUS_DDC_NACK		BIT(0)


#define IT66121_SHA_SEL				0x50
#define IT66121_SHA_SEL_PREV_RI_B		BIT(3)
#define IT66121_SHA_SEL_MASK			(0x7 << 0)
#define IT66121_SHA_SEL_VXH(x)			((x) << 0)
#define IT66121_SHA_SEL_MI			(0x5 << 0)
#define IT66121_SHA_RD_BYTE1			0x51
#define IT66121_SHA_RD_BYTE2			0x52
#define IT66121_SHA_RD_BYTE3			0x53
#define IT66121_SHA_RD_BYTE4			0x54
#define IT66121_AKSV_RD_BYTE5			0x55
#define IT66121_PREV_RI0			0x56
#define IT66121_PREV_RI1			0x57

/* clock control */
#define IT66121_CLK_CTRL0			0x58
#define IT66121_CLK_CTRL0_MCLK_EXTERNAL		BIT(7)
#define IT66121_CLK_CTRL0_OSCLK_MASK		(3 << 5)
#define IT66121_CLK_CTRL0_OSCLK_AUTO		BIT(4)
#define IT66121_CLK_CTRL0_MCLK_MASK		(3 << 2)
#define IT66121_CLK_CTRL0_MCLK_1024FS		(3 << 2)
#define IT66121_CLK_CTRL0_MCLK_512FS		(2 << 2)
#define IT66121_CLK_CTRL0_MCLK_256FS		(1 << 2)
#define IT66121_CLK_CTRL0_MCLK_128FS		(0 << 2)
#define IT66121_CLK_CTRL0_CTS_EXTMCLK		BIT(1)
#define IT66121_CLK_CTRL0_IPCLK_AUTO		BIT(0)

#define IT66121_CLK_CTRL1			0x59
#define IT66121_CLK_CTRL1_PLL_MANUAL_MASK	(3 << 6)
#define IT66121_CLK_CTRL1_PLL_MANUAL(x)		\
			(((x) & IT66121_CLK_CTRL1_PLL_MANUAL_MASK) << 6)
#define IT66121_CLK_CTRL1_TXCLK_CNT_ENABLE	BIT(5)
#define IT66121_CLK_CTRL1_LOCK_DISABLE		BIT(4)
#define IT66121_CLK_CTRL1_VDO_LATCH_EDGE	BIT(3)
#define IT66121_CLK_CTRL1_FORCE_AUDIO_MUTE	BIT(2)



#define IT66121_CLK_STATUS0			0x5e
#define IT66121_CLK_STATUS0_TXCLK_CNT7_0_MASK	(0xff << 0)
#define IT66121_CLK_STATUS1			0x5f
#define IT66121_CLK_STATUS1_IP_LOCK		BIT(7)
#define IT66121_CLK_STATUS1_XP_LOCK		BIT(6)
#define IT66121_CLK_STATUS1_OSF_LOCK		BIT(5)
#define IT66121_CLK_STATUS1_NO_AUDIO		BIT(4)
#define IT66121_CLK_STATUS1_TXCLKCNT11_8_MASK	(0xf << 0)

#define IT66121_AUD_COUNT			0x60

#define IT66121_AFE_DRV_CTRL			0x61
#define IT66121_AFE_DRV_CTRL_PWD		BIT(5)
#define IT66121_AFE_DRV_CTRL_RST		BIT(4)
#define IT66121_AFE_DRV_CTRL_PDRXDET		BIT(2)
#define IT66121_AFE_DRV_CTRL_TERMON		BIT(1)

#define IT66121_AFE_XP_CTRL			0x62
#define IT66121_AFE_XP_CTRL_GAIN		BIT(7)
#define IT66121_AFE_XP_CTRL_PWDPLL		BIT(6)
#define IT66121_AFE_XP_CTRL_ENI			BIT(5)
#define IT66121_AFE_XP_CTRL_ER0			BIT(4)
#define IT66121_AFE_XP_CTRL_RESETB		BIT(3)
#define IT66121_AFE_XP_CTRL_PWDI		BIT(2)

#define IT66121_AFE_CTRL			0x63
#define IT66121_AFE_CTRL_IP_BYPASS		BIT(6)
#define IT66121_AFE_CTRL_DRV_ISW_MASK		(0x7 << 3)

#define IT66121_AFE_IP_CTRL			0x64
#define IT66121_AFE_IP_CTRL_GAIN		BIT(7)
#define IT66121_AFE_IP_CTRL_PWDPLL		BIT(6)
#define IT66121_AFE_IP_CTRL_CKSEL_MASK		(0x3 << 4)
#define IT66121_AFE_IP_CTRL_ER0			BIT(3)
#define IT66121_AFE_IP_CTRL_RESETB		BIT(2)
#define IT66121_AFE_IP_CTRL_ENC			BIT(1)
#define IT66121_AFE_IP_CTRL_EC1			BIT(0)

#define IT66121_AFE_RING_CTRL			0x65
#define IT66121_AFE_RING_CTRL_CK_SLOW		BIT(1)
#define IT66121_AFE_RING_CTRL_CK_FAST		BIT(0)

#define IT66121_AFE_XPIP_PARAM			0x68
#define IT66121_AFE_XPIP_PARAM_XP_EC1		BIT(4)
#define IT66121_AFE_XPIP_PARAM_XP_DEK		BIT(3)
#define IT66121_AFE_XPIP_PARAM_IP_DEK		BIT(2)
#define IT66121_AFE_XPIP_PARAM_IP_ER1		BIT(1)
#define IT66121_AFE_XPIP_PARAM_IP_DISVC		BIT(0)


#define IT66121_PLL_CTRL			0x6a


// Input Data Format Register
#define IT66121_INPUT_MODE			0x70
#define IT66121_INPUT_MODE_COLOR_MASK		(0x3 << 6)
#define IT66121_INPUT_MODE_COLOR_YUV444		(0x2 << 6)
#define IT66121_INPUT_MODE_COLOR_YUV422		(0x1 << 6)
#define IT66121_INPUT_MODE_COLOR_RGB		(0x0 << 6)
#define IT66121_INPUT_MODE_PCLKDIV2		BIT(5)
#define IT66121_INPUT_MODE_CCIR656		BIT(4)
#define IT66121_INPUT_MODE_SYNC_EMBEDDED	BIT(3)
#define IT66121_INPUT_MODE_DDR			BIT(2)
#define IT66121_INPUT_MODE_PCLK_DLY_MASK	0x3
#define IT77121_INPUT_MODE_PCLK_DLY(x)		((x) << 0)

#define IT66121_TXFIFO_CTRL			0x71
#define IT66121_TXFIFO_CTRL_XP_STABLETIME_MASK	(0x3 << 6)
#define IT66121_TXFIFO_CTRL_XP_STABLETIME_100US	(0x2 << 6)
#define IT66121_TXFIFO_CTRL_XP_STABLETIME_50US	(0x1 << 6)
#define IT66121_TXFIFO_CTRL_XP_STABLETIME_75US	(0x0 << 6)
#define IT66121_TXFIFO_CTRL_XP_LOCK_CHK		BIT(5)
#define IT66121_TXFIFO_CTRL_PLL_BUF_RST		BIT(4)
#define IT66121_TXFIFO_CTRL_AUTO_RST		BIT(3)
#define IT66121_TXFIFO_CTRL_IO_NONSEQ		BIT(2)
#define IT66121_TXFIFO_CTRL_RST			BIT(1)
#define IT66121_TXFIFO_CTRL_ENAVMUTE_RST	BIT(0)

#define IT66121_CSC_CTRL			0x72
#define IT66121_CSC_CTRL_DITHER			BIT(7)
#define IT66121_CSC_CTRL_UDFILTER		BIT(6)
#define IT66121_CSC_CTRL_DNFREE_GO		BIT(5)
#define IT66121_CSC_CTRL_BTA			BIT(2)
#define IT66121_CSC_CTRL_CSC_MASK		(0x3 << 0)
#define IT66121_CSC_CTRL_CSC_YUV2RGB		(0x3 << 0)
#define IT66121_CSC_CTRL_CSC_RGB2YUV		(0x2 << 0)
#define IT66121_CSC_CTRL_CSC_BYPASS		0

#define SIZEOF_CSCMTX 21
#define SIZEOF_CSCGAIN 6
#define SIZEOF_CSCOFFSET 3


#define IT66121_CSC_Y_OFFSET			0x73
#define IT66121_CSC_C_OFFSET			0x74
#define IT66121_CSC_RGB_OFFSET			0x75
#define IT66121_CSC_MTX11_L			0x76
#define IT66121_CSC_MTX11_H			0x77
#define IT66121_CSC_MTX12_L			0x78
#define IT66121_CSC_MTX12_H			0x79
#define IT66121_CSC_MTX13_L			0x7a
#define IT66121_CSC_MTX13_H			0x7b
#define IT66121_CSC_MTX21_L			0x7c
#define IT66121_CSC_MTX21_H			0x7d
#define IT66121_CSC_MTX22_L			0x7e
#define IT66121_CSC_MTX22_H			0x7f
#define IT66121_CSC_MTX23_L			0x80
#define IT66121_CSC_MTX23_H			0x81
#define IT66121_CSC_MTX31_L			0x82
#define IT66121_CSC_MTX31_H			0x83
#define IT66121_CSC_MTX32_L			0x84
#define IT66121_CSC_MTX32_H			0x85
#define IT66121_CSC_MTX33_L			0x86
#define IT66121_CSC_MTX33_H			0x87

/*#define IT66121_CSC_GAIN1V_L 0x88
#define IT66121_CSC_GAIN1V_H 0x89
#define IT66121_CSC_GAIN2V_L 0x8A
#define IT66121_CSC_GAIN2V_H 0x8B
#define IT66121_CSC_GAIN3V_L 0x8C*/

#define IT66121_CEC_SLAVE_ADDRESS		0x8d
#define IT66121_CEC_SLAVE_ADDRESS_MASK		0xff
#define IT66121_CEC_SLAVE_ADDRESS_DEFAULT	0xc8

/*#define IT66121_HVPol 0x90
#define IT66121_HfPixel 0x91
#define IT66121_HSSL 0x95
#define IT66121_HSEL 0x96
#define IT66121_HSH 0x97
#define IT66121_VSS1 0xA0
#define IT66121_VSE1 0xA1
#define IT66121_VSS2 0xA2
#define IT66121_VSE2 0xA3 */

#define IT66121_HDMI_MODE			0xc0
#define IT66121_HDMI_MODE_HDMI			BIT(0)
#define IT66121_HDMI_MODE_DVI			0

#define IT66121_AV_MUTE				0xc1
#define IT66121_AV_MUTE_BLUE_SCR		BIT(1)
#define IT66121_AV_MUTE_MUTE			BIT(0)
/*    #define B_TX_NODEF_PHASE    (1<<2)
    #define B_TX_PHASE_RESYNC   (1<<3)
    #define O_TX_COLOR_DEPTH     4
    #define M_TX_COLOR_DEPTH     7
    #define B_TX_COLOR_DEPTH_MASK (M_TX_COLOR_DEPTH<<O_TX_COLOR_DEPTH)
    #define B_TX_CD_NODEF  0
    #define B_TX_CD_24     (4<<4)
    #define B_TX_CD_30     (5<<4)
    #define B_TX_CD_36     (6<<4)
    #define B_TX_CD_48     (7<<4) */

#define IT66121_OESS_CYCLES			0xc3

#define IT66121_SINGLE_CTRL			0xc5
#define IT66121_SINGLE_CTRL_AUDIO_CTS_USER	BIT(1)
/*#define B_TX_SINGLE_PKT    BIT(0)
#define B_TX_BURST_PKT	0 */

/* infoframe packet control - bits valid for all registers */
#define IT66121_INFOFRM_REPEAT_PACKET		BIT(1)
#define IT66121_INFOFRM_ENABLE_PACKET		BIT(0)

#define IT66121_GENERAL_CTRL			0xc6
#define IT66121_NULL_CTRL			0xc9
#define IT66121_ACP_CTRL			0xca
//#define IT66121_ISRC1_CTRL			0xcb
//#define IT66121_ISRC2_CTRL			0xcc
#define IT66121_AVI_INFOFRM_CTRL		0xcd
#define IT66121_AUD_INFOFRM_CTRL		0xce
//#define IT66121_SPD_INFOFRM_CTRL		0xcf
#define IT66121_MPG_INFOFRM_CTRL		0xd0
#define IT66121_VIDEOPARAM_STATUS		0xd1
#define IT66121_3D_INFOFRM_CTRL			0xd2

#define IT66121_AUDIO_CTRL0			0xe0
	#define M_TX_AUD_SWL (3<<6)
	#define M_TX_AUD_16BIT (0<<6)
	#define M_TX_AUD_18BIT (1<<6)
	#define M_TX_AUD_20BIT (2<<6)
	#define M_TX_AUD_24BIT (3<<6)

	#define B_TX_SPDIFTC (1<<5)

	#define B_TX_AUD_SPDIF BIT(4)
	#define B_TX_AUD_I2S (0<<4)
	#define B_TX_AUD_EN_I2S3   (1<<3)
	#define B_TX_AUD_EN_I2S2   (1<<2)
	#define B_TX_AUD_EN_I2S1   (1<<1)
	#define B_TX_AUD_EN_I2S0   (1<<0)
    #define B_TX_AUD_EN_SPDIF  1

#define IT66121_AUDIO_CTRL1			0xe1
	#define B_TX_AUD_FULLPKT		BIT(6)
	#define B_TX_AUDFMT_RISE_EDGE_SAMPLE_WS (0<<5)
	#define B_TX_AUDFMT_FALL_EDGE_SAMPLE_WS (1<<5)
	#define B_TX_AUDFMT_MSB_SHIFT_FIRST (0<<4)
	#define B_TX_AUDFMT_LSB_SHIFT_FIRST (1<<4)
	#define B_TX_AUDFMT_WS0_LEFT   (0<<3)
	#define B_TX_AUDFMT_WS0_RIGHT   (1<<3)
	#define B_TX_AUDFMT_DELAY_1T_TO_WS (0<<2)
	#define B_TX_AUDFMT_NO_DELAY_TO_WS (1<<2)
	#define B_TX_AUDFMT_LEFT_JUSTIFY (0<<1)
	#define B_TX_AUDFMT_RIGHT_JUSTIFY (1<<1)
	#define B_TX_AUDFMT_STD_I2S (0<<0)
	#define B_TX_AUDFMT_32BIT_I2S (1<<0)

#define IT66121_AUDIO_FIFOMAP 0xe2
	#define O_TX_FIFO3SEL 6
	#define O_TX_FIFO2SEL 4
	#define O_TX_FIFO1SEL 2
	#define O_TX_FIFO0SEL 0
	#define B_TX_SELSRC3  3
	#define B_TX_SELSRC2  2
	#define B_TX_SELSRC1  1
	#define B_TX_SELSRC0  0

#define IT66121_AUDIO_CTRL3 0xe3
	#define B_TX_AUD_MULCH (1<<7)
	#define B_TX_EN_ZERO_CTS (1<<6)
	#define B_TX_CHSTSEL (1<<4)
	#define B_TX_S3RLCHG (1<<3)
	#define B_TX_S2RLCHG (1<<2)
	#define B_TX_S1RLCHG (1<<1)
	#define B_TX_S0RLCHG (1<<0)

#define IT66121_AUD_SRCVALID_FLAT 0xe4
	#define B_TX_AUD_SPXFLAT_SRC3 BIT(7)
	#define B_TX_AUD_SPXFLAT_SRC2 BIT(6)
	#define B_TX_AUD_SPXFLAT_SRC1 BIT(5)
	#define B_TX_AUD_SPXFLAT_SRC0 BIT(4)
	#define B_TX_AUD_ERR2FLAT BIT(3)
	#define B_TX_AUD_S3VALID BIT(2)
	#define B_TX_AUD_S2VALID BIT(1)
	#define B_TX_AUD_S1VALID BIT(0)

#define IT66121_AUD_HD				0xe5
#define IT66121_AUD_HD_FORCE_ASCLKDIV		BIT(7)
#define IT66121_AUD_HD_SPDIF_COMP_FIT		BIT(4)
#define IT66121_AUD_HD_HBR			BIT(3)
#define IT66121_AUD_HD_DSD			BIT(1)

#define IT66121_AUD_SCHMITT			0xe6
#define IT66121_AUD_SCHMITT_PCLK		BIT(5)
#define IT66121_AUD_SCHMITT_SPDIF		BIT(3)
#define IT66121_AUD_SCHMITT_MCLK		BIT(2)
#define IT66121_AUD_SCHMITT_SCK			BIT(1)
/* compat: same value as IT66121_AUD_CH_STAT_NLPCM */
#define IT66121_AUD_SCHMITT_CH_STAT_NLPCM	BIT(0)

#define IT66121_AUD_CH_STAT			0xe7
#define IT66121_AUD_CH_STAT_DEC_ERR_INT		BIT(5)
#define IT66121_AUD_CH_STAT_NLPCM		BIT(4)
#define IT66121_AUD_CH_STAT_FS_MASK		0xf

#define IT66121_I2C_SCHMITT			0xe8
#define IT66121_I2C_SCHMITT_EXTINT_ENABLE	BIT(4)
#define IT66121_I2C_SCHMITT_DDCSDA		BIT(1)
#define IT66121_I2C_SCHMITT_PCSDA		BIT(0)

#define IT66121_INT_MASK_EXT			0xec
#define IT66121_INT_STAT_EXT			0xee
#define IT66121_INT_EXT_VID_PARAM_CHANGE	BIT(6)
#define IT66121_INT_EXT_HDCP_PJ_DONE		BIT(5)
#define IT66121_INT_EXT_HDCP_RJ_DONE		BIT(4)
#define IT66121_INT_EXT_DDC_BUS_HANG		BIT(3)
#define IT66121_INT_EXT_VIDEO_FIFO_AUTO_RESET	BIT(2)
#define IT66121_INT_EXT_NO_AUDIO_INPUT		BIT(1)
#define IT66121_INT_EXT_AUDIO_DECODE_ERROR	BIT(0)

#define IT66121_INT_CORE_STAT			0xf0
#define IT66121_INT_CORE_STAT_CEC		BIT(2)
#define IT66121_INT_CORE_STAT_EXT		BIT(1)
#define IT66121_INT_CORE_STAT_HDMI		BIT(0)

/*
 * Bank 1
 */

#define IT66121_PKT_AUD_CTS0			0x130
#define IT66121_PKT_AUD_CTS1			0x131
#define IT66121_PKT_AUD_CTS2			0x132
#define IT66121_PKT_AUD_N0			0x133
#define IT66121_PKT_AUD_N1			0x134
#define IT66121_PKT_AUD_N2			0x135
#define IT66121_PKT_AUD_CTSCNT0			0x135
#define IT66121_PKT_AUD_CTSCNT1			0x136
#define IT66121_PKT_AUD_CTSCNT2			0x137

#define	IT66121_PKT_HB00			0x138
#define	IT66121_PKT_HB01			0x139
#define	IT66121_PKT_HB02			0x13a
#define	IT66121_PKT_PB00			0x13b
#define	IT66121_PKT_PB01			0x13c
#define	IT66121_PKT_PB02			0x13d
#define	IT66121_PKT_PB03			0x13e
#define	IT66121_PKT_PB04			0x13f
#define	IT66121_PKT_PB05			0x140
#define	IT66121_PKT_PB06			0x141
#define	IT66121_PKT_PB07			0x142
#define	IT66121_PKT_PB08			0x143
#define	IT66121_PKT_PB09			0x144
#define	IT66121_PKT_PB10			0x145
#define	IT66121_PKT_PB11			0x146
#define	IT66121_PKT_PB12			0x147
#define	IT66121_PKT_PB13			0x148
#define	IT66121_PKT_PB14			0x149
#define	IT66121_PKT_PB15			0x14a
#define	IT66121_PKT_PB16			0x14b
#define	IT66121_PKT_PB17			0x14c
#define	IT66121_PKT_PB18			0x14d
#define	IT66121_PKT_PB19			0x14e
#define	IT66121_PKT_PB20			0x14f
#define	IT66121_PKT_PB21			0x150
#define	IT66121_PKT_PB22			0x151
#define	IT66121_PKT_PB23			0x152
#define	IT66121_PKT_PB24			0x153
#define	IT66121_PKT_PB25			0x154
#define	IT66121_PKT_PB26			0x155
#define	IT66121_PKT_PB27			0x156

#define IT66121_AVIINFO_DB1			0x158
#define IT66121_AVIINFO_DB2			0x159
#define IT66121_AVIINFO_DB3			0x15a
#define IT66121_AVIINFO_DB4			0x15b
#define IT66121_AVIINFO_DB5			0x15c
#define IT66121_AVIINFO_SUM			0x15d
#define IT66121_AVIINFO_DB6			0x15e
#define IT66121_AVIINFO_DB7			0x15f
#define IT66121_AVIINFO_DB8			0x160
#define IT66121_AVIINFO_DB9			0x161
#define IT66121_AVIINFO_DB10			0x162
#define IT66121_AVIINFO_DB11			0x163
#define IT66121_AVIINFO_DB12			0x164
#define IT66121_AVIINFO_DB13			0x165

#define IT66121_AUDINFO_CC			0x168
#define IT66121_AUDINFO_SF			0x169
#define IT66121_AUDINFO_03PB			0x16a
#define IT66121_AUDINFO_CA			0x16b
#define IT66121_AUDINFO_DM_LSV			0x16c
#define IT66121_AUDINFO_SUM			0x16d


// Source Product Description Info Frame
/* FIXME: register documentation does list these as something different
#define IT66121_PKT_SPDINFO_SUM 0x170
#define IT66121_PKT_SPDINFO_PB1 0x171
#define IT66121_PKT_SPDINFO_PB2 0x172
#define IT66121_PKT_SPDINFO_PB3 0x173
#define IT66121_PKT_SPDINFO_PB4 0x174
#define IT66121_PKT_SPDINFO_PB5 0x175
#define IT66121_PKT_SPDINFO_PB6 0x176
#define IT66121_PKT_SPDINFO_PB7 0x177
#define IT66121_PKT_SPDINFO_PB8 0x178
#define IT66121_PKT_SPDINFO_PB9 0x179
#define IT66121_PKT_SPDINFO_PB10 0x17A
#define IT66121_PKT_SPDINFO_PB11 0x17B
#define IT66121_PKT_SPDINFO_PB12 0x17C
#define IT66121_PKT_SPDINFO_PB13 0x17D
#define IT66121_PKT_SPDINFO_PB14 0x17E
#define IT66121_PKT_SPDINFO_PB15 0x17F
#define IT66121_PKT_SPDINFO_PB16 0x180
#define IT66121_PKT_SPDINFO_PB17 0x181
#define IT66121_PKT_SPDINFO_PB18 0x182
#define IT66121_PKT_SPDINFO_PB19 0x183
#define IT66121_PKT_SPDINFO_PB20 0x184
#define IT66121_PKT_SPDINFO_PB21 0x185
#define IT66121_PKT_SPDINFO_PB22 0x186
#define IT66121_PKT_SPDINFO_PB23 0x187
#define IT66121_PKT_SPDINFO_PB24 0x188
#define IT66121_PKT_SPDINFO_PB25 0x189
*/

#define IT66121_MPGINFO_FMT			0x18a
#define IT66121_MPGINFO_FMT_FRAME_MASK		(0x3 << 1)
#define IT66121_MPGINFO_FMT_FRAME_P_PICTURE	(0x3 << 1)
#define IT66121_MPGINFO_FMT_FRAME_B_PICTURE	(0x2 << 1)
#define IT66121_MPGINFO_FMT_FRAME_I_PICTURE	(0x1 << 1)
#define IT66121_MPGINFO_FMT_FRAME_NO_DATA	(0x0 << 1)
#define IT66121_MPGINFO_FMT_FIELD_REPEAT	BIT(0)
#define IT66121_MPGINFO_DB0			0x18b
#define IT66121_MPGINFO_DB1			0x18c
#define IT66121_MPGINFO_DB2			0x18d
#define IT66121_MPGINFO_DB3			0x18e
#define IT66121_MPGINFO_SUM			0x18f

#define IT66121_AUDCHST_MODE    0x191 // 191 IT66121_AUD_CHSTD[2:0] 6:4
                                 //     IT66121_AUD_CHSTC 3
                                 //     IT66121_AUD_NLPCM 2
                                 //     IT66121_AUD_MONO 0
#define IT66121_AUDCHST_CAT     0x192 // 192 IT66121_AUD_CHSTCAT 7:0
#define IT66121_AUDCHST_SRCNUM  0x193 // 193 IT66121_AUD_CHSTSRC 3:0
#define IT66121_AUD0CHST_CHTNUM 0x194 // 194 IT66121_AUD0_CHSTCHR 7:4
                                 //     IT66121_AUD0_CHSTCHL 3:0
#define IT66121_AUD1CHST_CHTNUM 0x195 // 195 IT66121_AUD1_CHSTCHR 7:4
                                 //     IT66121_AUD1_CHSTCHL 3:0
#define IT66121_AUD2CHST_CHTNUM 0x196 // 196 IT66121_AUD2_CHSTCHR 7:4
                                 //     IT66121_AUD2_CHSTCHL 3:0
#define IT66121_AUD3CHST_CHTNUM 0x197 // 197 IT66121_AUD3_CHSTCHR 7:4
                                 //     IT66121_AUD3_CHSTCHL 3:0
#define IT66121_AUDCHST_CA_FS   0x198 // 198 IT66121_AUD_CHSTCA 5:4
                                 //     IT66121_AUD_CHSTFS 3:0
#define IT66121_AUDCHST_OFS_WL  0x199 // 199 IT66121_AUD_CHSTOFS 7:4
                                 //     IT66121_AUD_CHSTWL 3:0

/*
 *Video Configuration
 */

#define NON_SEQUENTIAL_YCBCR422

#define INPUT_COLOR_MODE F_MODE_RGB444
//#define INPUT_COLOR_MODE F_MODE_YUV422
//#define INPUT_COLOR_MODE F_MODE_YUV444

#define INPUT_COLOR_DEPTH 24
// #define INPUT_COLOR_DEPTH 30
// #define INPUT_COLOR_DEPTH 36

//#define OUTPUT_COLOR_MODE F_MODE_YUV422
//#define OUTPUT_COLOR_MODE F_MODE_YUV444
#define OUTPUT_COLOR_MODE F_MODE_RGB444

//#define OUTPUT_3D_MODE Frame_Pcaking
//#define OUTPUT_3D_MODE Top_and_Botton
//#define OUTPUT_3D_MODE Side_by_Side

//    #pragma message ("Defined seperated sync.")
#define INPUT_SIGNAL_TYPE 0 // 24 bit sync seperate
//#define INPUT_SIGNAL_TYPE ( T_MODE_DEGEN )
//#define INPUT_SIGNAL_TYPE ( T_MODE_INDDR)
//#define INPUT_SIGNAL_TYPE ( T_MODE_SYNCEMB)
//#define INPUT_SIGNAL_TYPE ( T_MODE_CCIR656 | T_MODE_SYNCEMB )


/*
 *Audio Configuration
 */

// #define SUPPORT_HBR_AUDIO
#define USE_SPDIF_CHSTAT
#ifndef SUPPORT_HBR_AUDIO
#define INPUT_SAMPLE_FREQ AUDFS_48KHz
#define INPUT_SAMPLE_FREQ_HZ 44100L
#define OUTPUT_CHANNEL 2 // 3 // 4 // 5//6 //7 //8

#define CNOFIG_INPUT_AUDIO_TYPE T_AUDIO_LPCM
// #define CNOFIG_INPUT_AUDIO_TYPE T_AUDIO_NLPCM
#define CONFIG_INPUT_AUDIO_SPDIF 0 // I2S
// #define CONFIG_INPUT_AUDIO_SPDIF 1 // SPDIF

// #define I2S_FORMAT 0x00 // 24bit I2S audio
#define I2S_FORMAT 0x01 // 32bit I2S audio
// #define I2S_FORMAT 0x02 // 24bit I2S audio, right justify
// #define I2S_FORMAT 0x03 // 32bit I2S audio, right justify

#else // SUPPORT_HBR_AUDIO

#define INPUT_SAMPLE_FREQ AUDFS_768KHz
#define INPUT_SAMPLE_FREQ_HZ 768000L
#define OUTPUT_CHANNEL 8
#define CNOFIG_INPUT_AUDIO_TYPE T_AUDIO_HBR
#define CONFIG_INPUT_AUDIO_SPDIF 0 // I2S
// #define CONFIG_INPUT_AUDIO_SPDIF 1 // SPDIF
#define I2S_FORMAT 0x47 // 32bit audio
#endif


/*
 *Audio Monitor Configuration
 */

// Video Data Type
#define F_MODE_RGB444  0
#define F_MODE_YUV422 1
#define F_MODE_YUV444 2
#define F_MODE_CLRMOD_MASK 3


#define F_MODE_INTERLACE  1

#define F_VIDMODE_ITU709  (1<<4)
#define F_VIDMODE_ITU601  0

#define F_VIDMODE_0_255   0
#define F_VIDMODE_16_235  (1<<5)

#define F_VIDMODE_EN_UDFILT (1<<6)
#define F_VIDMODE_EN_DITHER (1<<7)


// Audio relate definition and macro.
// 2008/08/15 added by jj_tseng@chipadvanced
#define F_AUDIO_ON  (1<<7)
#define F_AUDIO_HBR (1<<6)
#define F_AUDIO_DSD (1<<5)
#define F_AUDIO_NLPCM (1<<4)
#define F_AUDIO_LAYOUT_1 (1<<3)
#define F_AUDIO_LAYOUT_0 (0<<3)

// HBR - 1100
// DSD - 1010
// NLPCM - 1001
// LPCM - 1000

#define T_AUDIO_MASK 0xF0
#define T_AUDIO_OFF 0
#define T_AUDIO_HBR (F_AUDIO_ON|F_AUDIO_HBR)
#define T_AUDIO_DSD (F_AUDIO_ON|F_AUDIO_DSD)
#define T_AUDIO_NLPCM (F_AUDIO_ON|F_AUDIO_NLPCM)
#define T_AUDIO_LPCM (F_AUDIO_ON)

// Audio Enable
#define ENABLE_SPDIF    (1<<4)
#define ENABLE_I2S_SRC3  (1<<3)
#define ENABLE_I2S_SRC2  (1<<2)
#define ENABLE_I2S_SRC1  (1<<1)
#define ENABLE_I2S_SRC0  (1<<0)

#define AUD_SWL_NOINDICATE  0x0
#define AUD_SWL_16          0x2
#define AUD_SWL_17          0xC
#define AUD_SWL_18          0x4
#define AUD_SWL_20          0xA // for maximum 20 bit
#define AUD_SWL_21          0xD
#define AUD_SWL_22          0x5
#define AUD_SWL_23          0x9
#define AUD_SWL_24          0xB

/////////////////////////////////////////
// DDC Address
/////////////////////////////////////////
#define DDC_HDCP_ADDRESS 0x74
#define DDC_EDID_ADDRESS 0xA0
#define DDC_FIFO_MAXREQ 0x20


/* CEC i2c sub-device */
#define IT66121_CEC_INT_MASK			0x06
#define IT66121_CEC_INT_TX_FAIL			BIT(5)
#define IT66121_CEC_INT_RX_DONE			BIT(4)
#define IT66121_CEC_INT_TX_DONE			BIT(3)
#define IT66121_CEC_INT_RX_FAIL			BIT(2)
#define IT66121_CEC_INT_RX			BIT(1)
#define IT66121_CEC_INT_TX			BIT(0)

#define IT66121_CEC_CTRL0			0x08
#define IT66121_CEC_CTRL0_FIRE_FRAME		BIT(7)
#define IT66121_CEC_CTRL0_OE			BIT(5)
#define IT66121_CEC_CTRL0_FORCE			BIT(4)
#define IT66121_CEC_CTRL0_SMT_EN		BIT(3)
#define IT66121_CEC_CTRL0_RST_EN		BIT(2)
#define IT66121_CEC_CTRL0_INT_EN		BIT(0)

#define IT66121_CEC_CTRL1			0x09
#define IT66121_CEC_CTRL1_DATABIT_INC_0_1MS	BIT(7)
#define IT66121_CEC_CTRL1_ERROR_REGION_WHOLE	BIT(6)
#define IT66121_CEC_CTRL1_RECV_DATA_EN		BIT(5)
#define IT66121_CEC_CTRL1_ILLEGAL_AS_ERROR	BIT(2)
#define IT66121_CEC_CTRL1_NACK_EN		BIT(1)
#define IT66121_CEC_CTRL1_100MS_CNT_EN		BIT(0)

#define IT66121_CEC_ARBIT_SEL			0x0a
#define IT66121_CEC_ARBIT_SEL_3BIT		BIT(4)

#define IT66121_CEC_DATA_MIN			0x0b

#define IT66121_CEC_TIMER_UNIT			0x0c

#define IT66121_CEC_IO				0x0d
#define IT66121_CEC_IO_DRV_MASK			GENMASK(7, 6)
#define IT66121_CEC_IO_DRV_2_5MA		0x0
#define IT66121_CEC_IO_DRV_5_0MA		0x1
#define IT66121_CEC_IO_DRV_7_5MA		0x2
#define IT66121_CEC_IO_DRV_10_0MA		0x3
#define IT66121_CEC_IO_SR			BIT(5)
#define IT66121_CEC_IO_PU			BIT(4)

#define IT66121_CEC_TX_HEADER			0x10
#define IT66121_CEC_TX_OPCODE			0x11
#define IT66121_CEC_TX_OPERAND1			0x12
#define IT66121_CEC_TX_LOGICAL_ADDR		0x22
#define IT66121_CEC_TX_LOGICAL_ADDR_MASK	0xf
#define IT66121_CEC_TX_OUT_NUM			0x23
#define IT66121_CEC_TX_OUT_NUM_MASK		0x1f

#define IT66121_CEC_RX_HEADER			0x30
#define IT66121_CEC_RX_OPCODE			0x31
#define IT66121_CEC_RX_OPERAND1			0x32

#define IT66121_CEC_IN_CNT			0x42
#define IT66121_CEC_IN_CNT_BYTES_MASK		0x1f

#define IT66121_CEC_OUT_CNT			0x43
#define IT66121_CEC_OUT_CNT_BYTES_MASK		0x1f

#define IT66121_CEC_STATUS			0x44
#define IT66121_CEC_STATUS_READY_FIRE		BIT(6)
#define IT66121_CEC_STATUS_ILLEGAL_LOW_PERIOD	BIT(5)
#define IT66121_CEC_STATUS_DATA_PERIOD_TO_SHORT	BIT(4)
#define IT66121_CEC_STATUS_OUT_RECV_ACK		0
#define IT66121_CEC_STATUS_OUT_RECV_NACK	BIT(2)
#define IT66121_CEC_STATUS_OUT_RETRY_NO_ACK	BIT(3)
#define IT66121_CEC_STATUS_OUT_FAIL		BIT(3) | BIT(2)
#define IT66121_CEC_STATUS_OUT_MASK		GENMASK(3, 2)
#define IT66121_CEC_STATUS_BUS_FREE		BIT(1)

#define IT66121_CEC_MS_COUNT_7_0		0x45
#define IT66121_CEC_MS_COUNT_7_0_VAL(x)		(x & 0xff)
#define IT66121_CEC_MS_COUNT_15_8		0x46
#define IT66121_CEC_MS_COUNT_15_8_VAL(x)	((x >> 8) & 0xff)
#define IT66121_CEC_MS_COUNT_19_16		0x47
#define IT66121_CEC_MS_COUNT_19_16_VAL(x)	((x >> 16) & 0xf)

#define IT66121_CEC_INT_PEND			0x48
#define IT66121_CEC_INT_PEND_CEC		BIT(5)

#define IT66121_CEC_INT_STAT			0x4c
/* same bits as in IT66121_CEC_INT_MASK */


int it66121_reg_read(struct it66121 *priv, int reg);
int it66121_reg_write(struct it66121 *priv, int reg, u8 val);
int it66121_reg_update_bits(struct it66121 *priv, unsigned int reg,
			    u8 mask, u8 val);
int it66121_reg_bulk_write(struct it66121 *priv, unsigned int reg,
			   const void *val, size_t val_count);


#ifdef CONFIG_DRM_IT66121_CEC
int it66121_cec_init(struct device *dev, struct it66121 *priv);
void it66121_cec_irq_process(struct it66121 *priv);
#else
static inline int it66121_cec_init(struct device *dev, struct it66121 *priv)
{
	return 0;
}
static void it66121_cec_irq_process(struct it66121 *priv)
{
}
#endif

#ifdef CONFIG_DRM_IT66121_AUDIO
int it66121_audio_init(struct device *dev, struct it66121 *priv);
void it66121_audio_exit(struct it66121 *priv);
#else
static inline int it66121_audio_init(struct device *dev, struct it66121 *priv)
{
	return 0;
}
static inline void it66121_audio_exit(struct it66121 *priv)
{
}
#endif

#endif /* __DRM_ITE_IT66121_H__ */
